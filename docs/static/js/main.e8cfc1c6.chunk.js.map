{"version":3,"sources":["utils/utils.js","components/Page/Page.js","components/Sidebar/Sidebar.js","components/TextLayer/TextLayer.js","Main.js","SelectorPage.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["redrawCanvas","c","ctx","data","pageIndex","fillStyle","fillRect","width","height","size","i","j","paths","forEach","path","drawPath","length","inkColor","inkColorFaded","strokeStyle","lineWidth","lineJoin","beginPath","e","moveTo","x","y","lineTo","stroke","type","arc","Math","PI","fill","findNewIdx","array","idx","found","index","Page","props","cellDPI","cellSize","useState","canvas","setCanvas","stylus","setStylus","painting","setPainting","currentPath","setCurrentPath","screenshot","setScreenshot","isStylusShown","setIsStylusShown","setCorner","updateStorage","setData","cRef","useCallback","style","getContext","useEffect","_","coords","top","offsetTop","left","offsetLeft","redraw","sRef","s","className","onMouseLeave","res","push","onMouseMove","requestAnimationFrame","mode","relX","clientX","relY","clientY","putImageData","floor","onMouseDown","JSON","parse","stringify","item","doWeIntersect","prevDot","x1","y1","x2","y2","k","a","getAAndKOfLine","aPrime","abs","pathIntersects","onMouseUp","getImageData","ref","id","viewBox","display","r","Sidebar","modeSetter","setShowingBook","onClick","strokeLinecap","strokeLinejoin","strokeWidth","d","texts","text","setRedrawTexts","rx","ry","undoing","strokeMiterlimit","cx","cy","TextLayer","setCurText","font","corner","leftEffective","topEffective","minSize","minWidth","minHeight","fontFamily","splice","value","onBlur","onChange","target","Main","root","document","getElementById","offsetHeight","setSize","setRedraw","setMode","templateLeft","templateRight","curText","undoLastPath","pop","console","log","localStorage","setItem","savePage","page","onmousemove","event","window","addEventListener","ctrlKey","keyCode","preventDefault","getItem","map","SelectorPage","setPageIndex","pages","setPages","tmpPages","title","tmp","obj","name","cpy","readOnly","stopPropagation","App","showingBook","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"kQAAA,SAASA,EAAaC,EAAGC,EAAKC,EAAMC,GAIlCF,EAAIG,UAHY,UAIhBH,EAAII,SAAS,EAAG,EAAGL,EAAEM,MAAON,EAAEO,QAE9BN,EAAIG,UALc,UAQlB,IADA,IAAMI,EAAOR,EAAEM,MAAQ,GACdG,EAAI,EAAGA,EAAI,GAAIA,IACtB,IAAK,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACpBT,EAAII,SAASG,GAAM,EAAEC,GAAG,EAAGD,GAAM,EAAEE,GAAG,EAAG,EAAG,GAK9C,UAAWR,GAAMA,EAAKS,MAAMC,SAAQ,SAAAC,GAAI,OAAIC,EAASd,EAAGC,EAAKY,EAAMV,MAIzE,SAASW,EAASd,EAAGC,EAAKY,EAAMV,GAC9B,GAAKU,GACAA,EAAKE,QACNZ,IAAcU,EAAK,GAAGV,UAA1B,CACA,IAAMa,EAAW,UACXC,EAAgB,YAEhBT,EAAO,EAAIR,EAAEM,MAAQ,GAG3BL,EAAIiB,YAAcD,EAClBhB,EAAIkB,UAHc,EAIlBlB,EAAImB,SAAW,QAEfnB,EAAIoB,YACJR,EAAKD,SAAQ,SAACU,EAAGb,GACL,IAANA,IACM,IAANA,GAASR,EAAIsB,OAAOD,EAAEE,EAAEhB,EAAMc,EAAEG,EAAEjB,GAC5B,IAANC,GAASR,EAAIyB,OAAOJ,EAAEE,EAAEhB,EAAMc,EAAEG,EAAEjB,OAExCP,EAAI0B,SAEJ1B,EAAIiB,YAAcF,EAClBf,EAAIkB,UAAYA,EAEhBlB,EAAIoB,YACJR,EAAKD,SAAQ,SAACU,EAAGb,GACL,IAANA,IACM,IAANA,GAASR,EAAIsB,OAAOD,EAAEE,EAAEhB,EAAMc,EAAEG,EAAEjB,GAC5B,IAANC,GAASR,EAAIyB,OAAOJ,EAAEE,EAAEhB,EAAMc,EAAEG,EAAEjB,OAExCP,EAAI0B,SAEiB,QAAjBd,EAAK,GAAGe,OACV3B,EAAIG,UAAYa,EAChBJ,EAAKD,SAAQ,SAACU,EAAGb,GACL,IAANA,IAEJR,EAAIoB,YACJpB,EAAI4B,IAAIP,EAAEE,EAAEhB,EAAMc,EAAEG,EAAEjB,EAAMW,EAAa,EAAG,EAAEW,KAAKC,IACnD9B,EAAI+B,WAEN/B,EAAIG,UAAYY,EAChBH,EAAKD,SAAQ,SAACU,EAAGb,GACL,IAANA,IAEJR,EAAIoB,YACJpB,EAAI4B,IAAIP,EAAEE,EAAEhB,EAAMc,EAAEG,EAAEjB,EAAMW,EAAa,EAAG,EAAEW,KAAKC,IACnD9B,EAAI+B,aAuDV,SAASC,EAAWC,GAGlB,IAFA,IAAIC,EAAM,EACNC,GAAQ,GACJA,GACNA,GAAQ,EACRF,EAAMtB,SAAQ,SAAAU,GACRA,EAAEe,QAAUF,IAAKC,GAAQ,MAE/BD,IAEF,OAAOA,EC6DMG,MA5Lf,SAAcC,GACZ,IAAMC,EAAUD,EAAME,SAA4B,EAAjBF,EAAME,SAAe,GADnC,EAGSC,mBAAS,MAHlB,mBAGZC,EAHY,KAGJC,EAHI,OAISF,mBAAS,MAJlB,mBAIZG,EAJY,KAIJC,EAJI,OAKaJ,oBAAS,GALtB,mBAKZK,EALY,KAKFC,EALE,OAMmBN,mBAAS,IAN5B,mBAMZO,EANY,KAMCC,EAND,OAOiBR,mBAAS,MAP1B,mBAOZS,EAPY,KAOAC,EAPA,OASuBV,oBAAS,GAThC,mBASZW,EATY,KASGC,EATH,KAWZpD,EAAsDqC,EAAtDrC,KAAMC,EAAgDoC,EAAhDpC,UAAWoD,EAAqChB,EAArCgB,UAAWC,EAA0BjB,EAA1BiB,cAAeC,EAAWlB,EAAXkB,QAE5CC,EAAOC,uBAAY,SAAA3D,GACvB,GAAU,OAANA,EAAJ,CAEA4C,EAAU5C,GAEVA,EAAE4D,MAAMtD,MAAS,GAAGkC,EAAU,EAAK,KACnCxC,EAAE4D,MAAMrD,OAAU,GAAGiC,EAAU,EAAK,KACpCxC,EAAEM,MAAQ,GAAGkC,EACbxC,EAAEO,OAAS,GAAGiC,EACd,IAAMvC,EAAMD,EAAE6D,WAAW,MAEzB9D,EAAaC,EAAGC,EAAKC,EAAMC,MAC1B,CAACqC,EAAStC,EAAMC,IAGnB2D,qBAAU,SAAAC,GACR,GAAe,OAAXpB,EAAJ,CACA,IAAMqB,EAAS,CACbC,IAAKtB,EAAOuB,UAAY,EACxBC,KAAMxB,EAAOyB,YAEfb,EAAUS,MACT,CAACT,EAAWZ,IAEfmB,qBAAU,SAAAC,GACR,GAAe,OAAXpB,EAAJ,CAEA,IAAM1C,EAAM0C,EAAOkB,WAAW,MAE9B9D,EAAa4C,EAAQ1C,EAAKC,EAAMC,MAC/B,CAACoC,EAAM8B,OAAQ1B,EAAQzC,EAAMC,IAEhC,IAAMmE,EAAOX,uBAAY,SAAAY,GAAC,OAAIzB,EAAUyB,KAAI,IAqH5C,OACE,sBACEC,UAAU,sBACVC,aAfJ,SAA2BnD,GACzB0B,GAAY,GACZM,GAAiB,GAEjB,IAAIoB,EAAMxE,EACVwE,EAAI/D,MAAMgE,KAAK1B,GACfQ,EAAQiB,GACRlB,EAAckB,GAEdxB,EAAe,KAOb0B,YAtHJ,SAA0BtD,GACxBuD,uBAAsB,SAAAd,GACpB,GAAe,OAAXlB,EAAJ,CAEA,GAAIE,GAA2B,SAAfR,EAAMuC,KAAiB,CACrC,IAAMC,GAAQzD,EAAE0D,QAAUrC,EAAOyB,YAAc5B,EACzCyC,GAAQ3D,EAAE4D,QAAUvC,EAAOuB,WAAa1B,EAExCvC,EAAM0C,EAAOkB,WAAW,MAC9B5D,EAAIkF,aAAahC,EAAY,EAAG,GAChCrC,EAAS6B,EAAQ1C,EAAT,sBAAkBgD,GAAlB,CAA+B,CAACzB,EAAGuD,EAAMtD,EAAGwD,KAAQ1C,EAAMpC,WAGpE,GAAmB,QAAfoC,EAAMuC,OAEVxB,GAAiB,GACjBT,EAAOe,MAAMK,IAAMnC,KAAKsD,MAAM9D,EAAE4D,QAAQ,GAAK,KAC7CrC,EAAOe,MAAMO,KAAOrC,KAAKsD,MAAM9D,EAAE0D,QAAQ,GAAK,KAC1CjC,GAAU,CACZ,IAAMgC,GAAQzD,EAAE0D,QAAUrC,EAAOyB,YAAc5B,EACzCyC,GAAQ3D,EAAE4D,QAAUvC,EAAOuB,WAAa1B,EAE9CU,GAAe,SAAA5B,GAAC,4BAAQA,GAAR,CAAW,CAACE,EAAGuD,EAAMtD,EAAGwD,QACxC,IAAMhF,EAAM0C,EAAOkB,WAAW,MAC9B/C,EAAS6B,EAAQ1C,EAAKgD,EAAaV,EAAMpC,iBA+F3CkF,YAxFJ,SAA0B/D,GACxB,GAAmB,QAAfiB,EAAMuC,MACR,IAAK/B,EAAU,CACbC,GAAY,GAEZ,IAAM+B,GAAQzD,EAAE0D,QAAUrC,EAAOyB,YAAc5B,EACzCyC,GAAQ3D,EAAE4D,QAAUvC,EAAOuB,WAAa1B,EAE9CU,EAAe,CAAC,CAACtB,KAAM,MAAOzB,UAAWoC,EAAMpC,WAAY,CAACqB,EAAGuD,EAAMtD,EAAGwD,KACxE,IAAMhF,EAAM0C,EAAOkB,WAAW,MAC9B/C,EAAS6B,EAAQ1C,EAAK,CAAC,CAAC2B,KAAM,MAAOzB,UAAWoC,EAAMpC,WAAY,CAACqB,EAAGuD,EAAMtD,EAAGwD,IAAQ1C,EAAMpC,iBAE1F,GAAmB,WAAfoC,EAAMuC,KAAmB,CAChC,IAAMC,GAAQzD,EAAE0D,QAAUrC,EAAOyB,YAAc5B,EACzCyC,GAAQ3D,EAAE4D,QAAUvC,EAAOuB,WAAa1B,EAE1CkC,EAAMY,KAAKC,MAAMD,KAAKE,UAAUtF,IACpCwE,EAAI/D,MAAQ,GACZT,EAAKS,MAAMC,SAAQ,SAAC6E,EAAMhF,IDVlC,SAAwBe,EAAGC,EAAGZ,EAAML,GAClC,IAAIkF,GAAgB,EAChBC,EAAU,KAmBd,OAjBA9E,EAAKD,SAAQ,SAAC6E,EAAMhF,GAClB,GAAgB,OAAZkF,EAAkB,CAAC,IAAD,EAmB1B,SAAwBC,EAAIC,EAAIC,EAAIC,GAClC,IAAIC,GAAKD,EAAKF,IAAOC,EAAKF,GAE1B,MAAO,CAACI,IAAGC,EADHJ,EAAKD,EAAKI,GApBCE,CAAeP,EAAQnE,EAAGmE,EAAQlE,EAAGgE,EAAKjE,EAAGiE,EAAKhE,GAA1DuE,EADa,EACbA,EAAGC,EADU,EACVA,EACJE,EAAS1E,EAAID,EAAIwE,EACVlE,KAAKsE,IAAIH,EAAIE,GACf,EAAE3F,IACXkF,GAAgB,GAIf,SAACD,EAAKjE,EAAIA,EAAI,GAAd,SAAmBiE,EAAKhE,EAAIA,EAAI,GAAjC,SAAuC,EAAEjB,EAAO,KAClDkF,GAAgB,GAGlBC,EAAUF,KAGLC,GCVMW,CAAetB,EAAME,EAAMQ,EAAMjD,IAAUkC,EAAI/D,MAAMgE,KAAKc,MAEjEhC,EAAQiB,GACR,IAAMzE,EAAM0C,EAAOkB,WAAW,MAC9B9D,EAAa4C,EAAQ1C,EAAKyE,EAAKvE,GAC/BqD,EAAckB,KAiEhB4B,UA7DJ,SAAwBhF,GACtB,GAAmB,QAAfiB,EAAMuC,MACR,GAAI/B,EAAU,CACZC,GAAY,GAEZ,IAAI0B,EAAMxE,EACVwE,EAAI/D,MAAMgE,KAAK1B,GACfQ,EAAQiB,GACRlB,EAAckB,GAEdxB,EAAe,IACf,IAAMjD,EAAM0C,EAAOkB,WAAW,MAC9B9D,EAAa4C,EAAQ1C,EAAKsC,EAAMrC,KAAMqC,EAAMpC,iBAEzC,GAAmB,SAAfoC,EAAMuC,KACf,GAAK/B,EAUE,CACLC,GAAY,GAEZ,IAAM+B,GAAQzD,EAAE0D,QAAUrC,EAAOyB,YAAc5B,EACzCyC,GAAQ3D,EAAE4D,QAAUvC,EAAOuB,WAAa1B,EAE1CkC,EAAMxE,EACVwE,EAAI/D,MAAMgE,KAAV,sBAAmB1B,GAAnB,CAAgC,CAACzB,EAAGuD,EAAMtD,EAAGwD,MAC7CxB,EAAQiB,GACRlB,EAAckB,GAEdxB,EAAe,IACf,IAAMjD,EAAM0C,EAAOkB,WAAW,MAC9B9D,EAAa4C,EAAQ1C,EAAKsC,EAAMrC,KAAMqC,EAAMpC,eAvB/B,CACb6C,GAAY,GACZ,IAAM/C,EAAM0C,EAAOkB,WAAW,MAC9BT,EAAcnD,EAAIsG,aAAa,EAAG,EAAG5D,EAAOrC,MAAOqC,EAAOpC,SAE1D,IAAMwE,GAAQzD,EAAE0D,QAAUrC,EAAOyB,YAAc5B,EACzCyC,GAAQ3D,EAAE4D,QAAUvC,EAAOuB,WAAa1B,EAE9CU,EAAe,CAAC,CAACtB,KAAM,OAAQzB,UAAWoC,EAAMpC,WAAY,CAACqB,EAAGuD,EAAMtD,EAAGwD,KACzEnE,EAAS6B,EAAQ1C,EAAK,CAAC,CAAC2B,KAAM,OAAQzB,UAAWoC,EAAMpC,WAAY,CAACqB,EAAGuD,EAAMtD,EAAGwD,IAAQ1C,EAAMpC,aAgClG,UAOE,wBACEqG,IAAK9C,EACL+C,GAAG,MAEL,qBACEC,QAAQ,cACR1E,KAAK,eACL4B,MAAO,CAAC+C,QAAStD,EAAc,QAAQ,QACvCmB,UAAU,SACVgC,IAAKlC,EALP,SAOE,wBAAQ9C,EAAE,IAAIC,EAAE,IAAImF,EAAE,Y,MCzEfC,MAhHf,SAAiBtE,GACf,IAAKA,EAAMuE,aAAevE,EAAMuC,KAAM,OAAO,uDAE7C,IAAMiC,EAAiBxE,EAAMwE,eAyC7B,OACE,sBAAKvC,UAAU,uEAAf,UACE,wBACEwC,QAzCN,WACED,GAAe,IAyCXvC,UAAU,iBAFZ,SAIE,qBAAKkC,QAAQ,YAAY1E,KAAK,OAAOL,OAAO,eAAesF,cAAc,QAAQC,eAAe,QAAQC,YAAY,MAApH,SACE,sBAAMC,EAAE,6CAIZ,wBACEJ,QA9CN,WACqB,QAAfzE,EAAMuC,KAAgBvC,EAAMuE,WAAW,QACtCvE,EAAMuE,WAAW,QA6ClBtC,UAAS,6BAAqC,QAAbjC,EAAMuC,KAAa,eAAe,IAFrE,SAIE,qBAAK4B,QAAQ,YAAY1E,KAAK,OAAOL,OAAO,eAAesF,cAAc,QAAQC,eAAe,QAAQC,YAAY,MAApH,SACE,sBAAMC,EAAE,oEAIZ,wBACEJ,QAlDN,WACqB,SAAfzE,EAAMuC,KAAiBvC,EAAMuE,WAAW,QACvCvE,EAAMuE,WAAW,SAiDlBtC,UAAS,6BAAqC,SAAbjC,EAAMuC,KAAc,eAAe,IAFtE,SAIE,qBAAK4B,QAAQ,gBAAgB1E,KAAK,eAAlC,SACE,sBAAMoF,EAAE,8pDAIZ,wBACEJ,QArCN,WACqB,WAAfzE,EAAMuC,KAAmBvC,EAAMuE,WAAW,QACzCvE,EAAMuE,WAAW,WAoClBtC,UAAS,6BAAqC,WAAbjC,EAAMuC,KAAgB,eAAe,IAFxE,SAIE,qBAAK4B,QAAQ,gBAAgB1E,KAAK,eAAlC,SACE,sBAAMoF,EAAE,okEAIZ,wBACEJ,QA/DN,WACEzE,EAAMuE,WAAW,QACjBvE,EAAMkB,SAAQ,SAAAnC,GACZ,IAAIoD,EAAMpD,EAEV,OADAoD,EAAI2C,MAAM1C,KAAK,CAACV,IAAK,EAAGE,KAAM,EAAGmD,KAAM,SAChC5C,KAETnC,EAAMgF,gBAAe,SAAAjG,GAAC,OAAKA,MAyDvBkD,UAAU,qBAFZ,SAIE,sBAAKkC,QAAQ,cAAb,UAA2B,sBAAMlF,EAAE,KAAKC,EAAE,KAAKnB,MAAM,MAAMC,OAAO,MAAMiH,GAAG,KAAKC,GAAG,KAAKzF,KAAK,OAAOL,OAAO,eAAeuF,eAAe,QAAQC,YAAY,OAAM,sBAAMnF,KAAK,OAAOL,OAAO,eAAesF,cAAc,QAAQC,eAAe,QAAQC,YAAY,KAAKC,EAAE,6CAG7Q,wBACEJ,QA5DN,WACMzE,EAAMmF,SAASnF,EAAMmF,WA4DrBlD,UAAU,8BAFZ,SAIE,sBAAKkC,QAAQ,cAAb,UAA2B,sBAAMU,EAAE,kHAAkHpF,KAAK,OAAOL,OAAO,eAAesF,cAAc,QAAQU,iBAAiB,KAAKR,YAAY,OAAM,sBAAMC,EAAE,oHAAoHpF,KAAK,sBAGxX,wBACEgF,QA/DN,aAgEMxC,UAAU,qBAFZ,SAIE,sBAAKkC,QAAQ,YAAY1E,KAAK,OAAOL,OAAO,eAAesF,cAAc,QAAQC,eAAe,QAAQC,YAAY,MAApH,UACE,sBAAMC,EAAE,oLACR,wBAAQQ,GAAG,KAAKC,GAAG,KAAKjB,EAAE,eCpCrBkB,MAnEf,SAAmBvF,GAAQ,IAEjBkD,EAWElD,EAXFkD,KACAhF,EAUE8B,EAVF9B,EACAP,EASEqC,EATFrC,KACAuD,EAQElB,EARFkB,QACA8D,EAOEhF,EAPFgF,eACAQ,EAMExF,EANFwF,WACAC,EAKEzF,EALFyF,KACAxH,EAIE+B,EAJF/B,KACAyH,EAGE1F,EAHF0F,OACAzE,EAEEjB,EAFFiB,cACAsB,EACEvC,EADFuC,KAGIoD,EAAgBD,EAAO9D,KAAOsB,EAAKtB,KAAK3D,EACxC2H,EAAeF,EAAOhE,IAAMwB,EAAKxB,IAAIzD,EACrC4H,EAAU5H,EAiChB,OAAO,0BACLgE,UAAU,uCACVZ,MAAO,CACLO,KAAM+D,EAAc,KACpBjE,IAAKkE,EAAa,KAClBE,SAAUD,EAAU,KACpBE,UAAWF,EAAU,KACrBG,WAAYP,GAEd1B,UAdF,SAAmBhF,GACjByG,GAAY,GACZR,GAAe,SAAAjG,GAAC,OAAKA,MAarB+D,YA3BF,SAAqB/D,GACN,WAATwD,IACF5E,EAAKmH,MAAMmB,OAAO/H,EAAG,GACrBgD,EAAQvD,GACRsD,EAActD,GACdqH,GAAe,SAAAjG,GAAC,OAAKA,MAEnBA,EAAE0D,QAAUkD,EAAgBE,EAAQ,GAAK9G,EAAE4D,QAAUiD,EAAeC,EAAQ,IAChFL,EAAWtH,GACX8G,GAAe,SAAAjG,GAAC,OAAKA,OAmBrBmH,MAAOhD,EAAK6B,KACZoB,OArCF,SAAsBpH,GACO,KAAvBpB,EAAKmH,MAAM5G,GAAG6G,OAClBpH,EAAKmH,MAAMmB,OAAO/H,EAAG,GACrBgD,EAAQvD,GACRsD,EAActD,GACdqH,GAAe,SAAAjG,GAAC,OAAKA,OAiCrBqH,SA5CF,SAAoBrH,GAClBpB,EAAKmH,MAAM5G,GAAG6G,KAAOhG,EAAEsH,OAAOH,MAC9BhF,EAAQvD,GACRsD,EAActD,GACdqH,GAAe,SAAAjG,GAAC,OAAKA,SChBhBuH,EAEf,SAActG,GACZ,IAAMuG,EAAOC,SAASC,eAAe,QAC/BhB,EAAOzF,EAAMyF,KACbjB,EAAiBxE,EAAMwE,eAHV,EAKKrE,mBAASoG,EAAKG,aAAe,IALlC,mBAKZzI,EALY,KAKN0I,EALM,OAMSxG,oBAAS,GANlB,mBAMZ2B,EANY,KAMJ8E,EANI,OAQSzG,oBAAS,GARlB,mBAQT6E,GARS,aASS7E,mBAAS,CAACyB,KAAM,EAAGF,IAAK,IATjC,mBASZgE,EATY,KASJ1E,EATI,OAWKb,mBAAS,QAXd,mBAWZoC,EAXY,KAWNsE,EAXM,OAaK1G,mBAAS,CAC/B/B,MAAO,GACP0G,MAAO,CACL,CAACpD,IAAK,EAAGE,KAAM,EAAGmD,KAAM,aAE1B+B,aAAc,QACdC,cAAe,UAnBE,mBAaZpJ,EAbY,KAaNuD,EAbM,OAuBWf,oBAAU,GAvBrB,mBAuBZ6G,EAvBY,KAuBHxB,EAvBG,KA0CnB,SAASyB,IACP,IAAI9E,EAAMxE,EACVwE,EAAI/D,MAAM8I,MACVhG,EAAQiB,GACRlB,EAAckB,GACdyE,GAAU,SAAA7H,GAAC,OAAKA,KAGlB,SAASkC,EAActD,IJ4BzB,SAAkBmC,EAAOnC,GACvBwJ,QAAQC,IAAI,UACZC,aAAaC,QAAQ,OAAOxH,EAAOiD,KAAKE,UAAUtF,II7BhD4J,CAASvH,EAAMwH,KAAM7J,GAoBvB,OA9CA4D,qBAAU,SAAAC,GACR+E,EAAKkB,YAAc,SAACC,IACD,IAAbV,GACY,IAAZA,IACJrJ,EAAKmH,MAAMkC,GAAStF,KAAOgG,EAAMxI,EAAIwG,EAAOhE,KAAKzD,EACjDN,EAAKmH,MAAMkC,GAASpF,MAAQ8F,EAAMzI,EAAIyG,EAAO9D,MAAM3D,EACnDiD,EAAQvD,GACRsD,EAActD,GACdqH,GAAe,SAAAjG,GAAC,OAAKA,SAGtB,CAACiI,EAAST,EAAMb,EAAQzH,EAAMN,IAEjC4D,qBAAU,SAAAC,GACRmF,EAAQJ,EAAKG,aAAe,MAC3B,CAACH,EAAKG,eAcTnF,qBAAU,SAAAC,GACRmG,OAAOC,iBAAiB,SAAS,SAAA7I,GAC3BA,EAAE8I,SAAyB,KAAd9I,EAAE+I,SAAgBb,OAErCU,OAAOC,iBAAiB,WAAW,SAAA7I,GACjC,GAAIA,EAAE8I,SAAyB,KAAd9I,EAAE+I,QAEjB,OADA/I,EAAEgJ,kBACK,OAIV,IAGHxG,qBAAU,SAAAC,GJHZ,IAAkB1B,EIIdoB,GJJcpB,EIIGE,EAAMwH,KJHfzE,KAAKC,MAAMqE,aAAaW,QAAQ,OAAOlI,KAE1C,CACL1B,MAAO,GACP0G,MAAO,CACL,CAACpD,IAAK,EAAGE,KAAM,EAAGmD,KAAM,aAE1B+B,aAAc,QACdC,cAAe,aIJd,CAAC/G,EAAMwH,OAER,sBAAKvF,UAAU,SAAf,UACE,qBAAKA,UAAU,8FAAf,SACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,kCAAf,UACE,qBAAKA,UAAU,yBAAf,SACE,cAAC,EAAD,CACEH,OAAQA,EACR5B,SAAUjC,EACVN,KAAMA,EACNC,UAAW,EACXsD,QAASA,EACTqB,KAAMA,EACNvB,UAAWA,EACXC,cAAeA,MAInB,qBAAKgB,UAAU,UAEf,cAAC,EAAD,CACEH,OAAQA,EACR5B,SAAUjC,EACVN,KAAMA,EACNC,UAAW,EACXsD,QAASA,EACTqB,KAAMA,EACNvB,UAAW,SAAAjC,GAAC,OAAIA,GAChBkC,cAAeA,WAMvB,qBAAKgB,UAAU,uDAAf,SACE,cAAC,EAAD,CACEM,KAAMA,EACNgC,WAAYsC,EACZ7B,eAAgBA,EAChBG,QAAS8B,EACT/F,QAASA,EACTsD,eAAgBA,MAInB7G,EAAKmH,MAAMmD,KAAI,SAAC/E,EAAMhF,GAAP,OACd,cAAC,EAAD,CACEuH,KAAMA,EACNvC,KAAMA,EACNjF,KAAMA,EAENC,EAAGA,EACHP,KAAMA,EACNuD,QAASA,EACTD,cAAeA,EACf+D,eAAgBA,EAChBQ,WAAYA,EACZE,OAAQA,EACRnD,KAAMA,GARDrE,U,MClCAgK,MA7Ff,SAAsBlI,GAAQ,IACpBmI,EAAuCnI,EAAvCmI,aAAc3D,EAAyBxE,EAAzBwE,eAAgBiB,EAASzF,EAATyF,KADX,EAGDtF,mBAAS,IAHR,mBAGpBiI,EAHoB,KAGbC,EAHa,OAIClI,oBAAS,GAJV,mBAIZyG,GAJY,WAkB3B,OAZArF,qBAAU,WACR,IAAM+G,EAAWvF,KAAKC,MAAMqE,aAAaW,QAAQ,UACjD,GAAIM,EACFA,EAASlG,KAAK,CAACmG,MAAO,WAAYzI,MAAOJ,EAAW4I,KACpDD,EAASC,OACJ,CACL,IAAIE,EAAM,GACVA,EAAIpG,KAAK,CAACmG,MAAO,WAAYzI,MAAOJ,EAAW8I,KAC/CH,EAASG,MAEV,IAGD,sBAAKnH,MAAO,CAAC2E,WAAYP,GAAOxD,UAAU,uDAA1C,UACE,wBACA,sBAAKA,UAAU,2DAAf,UACE,qBAAKA,UAAU,sBAAf,oBAGA,qBACEA,UAAU,4HADZ,SAGGmG,EAAMH,KAAI,SAAC/E,EAAMhF,GAAP,OACT,yBAEE+D,UAAU,4HACVwC,QAAS,SAAA1F,GACP,GAAIb,IAAMkK,EAAM5J,OAAS,EAAG,CAC1B,IAAIiK,EAAML,EACVK,EAAIvB,MACJuB,EAAIrG,KAAK,CAACmG,MAAO,WAAYzI,MAAOJ,EAAW+I,KAC/CpB,aAAaC,QAAQ,QAASvE,KAAKE,UAAUwF,IAE/CN,EAAajF,EAAKpD,OAClB0E,GAAe,IAXnB,UAcE,sBAAKvC,UAAU,oBAAf,UACE,uCACA,uBACEiE,MAAOhD,EAAKqF,MACZG,KAAMxK,EACN+D,UAAU,iBACVZ,MAAO,CAACtD,MAAO,GAAGmF,EAAKqF,MAAM/J,OAAS,GAAK,MAC3C4H,SAAU,SAAArH,GACR,IAAM2J,EAAO3J,EAAEsH,OAAOqC,KAClBD,EAAML,EACVK,EAAIC,GAAMH,MAAQxJ,EAAEsH,OAAOH,MAC3BmC,EAASI,GACT,IAAIE,EAAM5F,KAAKC,MAAMD,KAAKE,UAAUwF,IACpCE,EAAIzB,MACJN,GAAU,SAAA7H,GAAC,OAAKA,KAChBsI,aAAaC,QAAQ,QAASvE,KAAKE,UAAU0F,KAE/CC,SAAU1K,IAAIkK,EAAM5J,OAAO,EAC3BiG,QAAS,SAAA1F,GACPA,EAAE8J,wBAKP3K,IAAMkK,EAAM5J,OAAO,EACpB,sBACEiG,QAAS,SAAA1F,GAEP,GADAA,EAAE8J,kBACE3K,IAAMkK,EAAM5J,OAAS,EAAzB,CACA,IAAIiK,EAAML,EACVK,EAAIxC,OAAO/H,EAAG,GACdmK,EAASI,GACT,IAAIE,EAAM5F,KAAKC,MAAMD,KAAKE,UAAUwF,IACpCE,EAAIzB,MACJG,aAAaC,QAAQ,QAASvE,KAAKE,UAAU0F,IAC7C/B,GAAU,SAAA7H,GAAC,OAAKA,OAVpB,SAaE,qBAAKoF,QAAQ,YAAYpG,MAAM,OAAO0B,KAAK,OAAOL,OAAO,eAAesF,cAAc,QAAQC,eAAe,QAAQC,YAAY,IAAjI,SACE,sBAAMC,EAAE,uGAGZ,KAvDK3G,eC7BJ4K,EAEf,WAAgB,IAAD,EACqB3I,mBAAS,GAD9B,mBACNvC,EADM,KACKuK,EADL,OAEyBhI,oBAAS,GAFlC,mBAEN4I,EAFM,KAEOvE,EAFP,KASPiB,EALJ,gBAOF,OAAKsD,EAEE,cAACzC,EAAD,CAAMkB,KAAM5J,EAAWuK,aAAcA,EAAc3D,eAAgBA,EAAgBiB,KAAMA,IAFvE,cAAC,EAAD,CAAc0C,aAAcA,EAAc3D,eAAgBA,EAAgBiB,KAAMA,KCPvFuD,QACW,cAA7BrB,OAAOsB,SAASC,UAEe,UAA7BvB,OAAOsB,SAASC,UAEhBvB,OAAOsB,SAASC,SAASC,MAAM,2DCjBnC,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAChB,EAAD,IACAtC,SAASC,eAAe,SFsHpB,kBAAmBsD,WACrBA,UAAUC,cAAcC,MACrBV,MAAK,SAACW,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNlD,QAAQkD,MAAMA,EAAMC,YEjH5BlB,M","file":"static/js/main.e8cfc1c6.chunk.js","sourcesContent":["function redrawCanvas(c, ctx, data, pageIndex) {\r\n  const bgColor = '#edbfb7'\r\n  const dotsColor = '#c7e8f3'\r\n\r\n  ctx.fillStyle = bgColor\r\n  ctx.fillRect(0, 0, c.width, c.height)\r\n  \r\n  ctx.fillStyle = dotsColor\r\n\r\n  const size = c.width / 28\r\n  for (let i = 0; i < 27; i++) {\r\n    for (let j = 0; j < 40; j++) {\r\n        ctx.fillRect(size*(1+i)-1, size*(1+j)-1, 3, 3)\r\n    }\r\n  }\r\n\r\n\r\n  if ('paths' in data) data.paths.forEach(path => drawPath(c, ctx, path, pageIndex))\r\n}\r\n\r\n\r\nfunction drawPath(c, ctx, path, pageIndex) {\r\n  if (!path) return\r\n  if (!path.length) return\r\n  if (pageIndex !== path[0].pageIndex) return\r\n  const inkColor = '#2f2235'\r\n  const inkColorFaded = '#2f223590'\r\n\r\n  const size = 2 * c.width / 28\r\n  const lineWidth = 4\r\n\r\n  ctx.strokeStyle = inkColorFaded\r\n  ctx.lineWidth = lineWidth\r\n  ctx.lineJoin = 'round'\r\n  \r\n  ctx.beginPath()\r\n  path.forEach((e, i) => {\r\n    if (i === 0) return\r\n    if (i === 1) ctx.moveTo(e.x*size, e.y*size)\r\n    if (i !== 1) ctx.lineTo(e.x*size, e.y*size)\r\n  })\r\n  ctx.stroke()\r\n\r\n  ctx.strokeStyle = inkColor\r\n  ctx.lineWidth = lineWidth/2\r\n\r\n  ctx.beginPath()\r\n  path.forEach((e, i) => {\r\n    if (i === 0) return\r\n    if (i === 1) ctx.moveTo(e.x*size, e.y*size)\r\n    if (i !== 1) ctx.lineTo(e.x*size, e.y*size)\r\n  })\r\n  ctx.stroke()\r\n\r\n  if (path[0].type === 'pen') {\r\n    ctx.fillStyle = inkColorFaded\r\n    path.forEach((e, i) => {\r\n      if (i === 0) return\r\n\r\n      ctx.beginPath()\r\n      ctx.arc(e.x*size, e.y*size, lineWidth/2, 0, 2*Math.PI)\r\n      ctx.fill()\r\n    })\r\n    ctx.fillStyle = inkColor\r\n    path.forEach((e, i) => {\r\n      if (i === 0) return\r\n\r\n      ctx.beginPath()\r\n      ctx.arc(e.x*size, e.y*size, lineWidth/4, 0, 2*Math.PI)\r\n      ctx.fill()\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\nfunction openPage(index) {\r\n  let res = JSON.parse(localStorage.getItem('page'+index)) \r\n  if (res) return res\r\n  return {\r\n    paths: [],\r\n    texts: [\r\n      {top: 0, left: 0, text: 'Apr 2021'}\r\n    ], \r\n    templateLeft: 'blank', \r\n    templateRight: 'blank'\r\n  }\r\n}\r\n\r\nfunction savePage(index, data) {\r\n  console.log('saving')\r\n  localStorage.setItem('page'+index, JSON.stringify(data))\r\n}\r\n\r\nfunction pathIntersects(x, y, path, size) {\r\n  let doWeIntersect = false\r\n  let prevDot = null\r\n\r\n  path.forEach((item, i) => {\r\n    if (prevDot !== null) {\r\n      const {k, a} = getAAndKOfLine(prevDot.x, prevDot.y, item.x, item.y)\r\n      const aPrime = y - x * k\r\n      const diff = Math.abs(a - aPrime)\r\n      if (diff < 4/size) {\r\n        doWeIntersect = true\r\n      }\r\n    }\r\n\r\n    if (((item.x - x)**2 + (item.y - y)**2) < (4/size)**2) {\r\n      doWeIntersect = true\r\n    }\r\n\r\n    prevDot = item\r\n  })\r\n\r\n  return doWeIntersect\r\n}\r\n\r\nfunction getAAndKOfLine(x1, y1, x2, y2) {\r\n  let k = (y2 - y1) / (x2 - x1)\r\n  let a = y1 - x1 * k\r\n  return {k, a}\r\n}\r\n\r\nfunction findNewIdx(array) {\r\n  let idx = 0\r\n  let found = false\r\n  while (!found) {\r\n    found = true\r\n    array.forEach(e => {\r\n      if (e.index === idx) found = false\r\n    })\r\n    idx++\r\n  }\r\n  return idx\r\n}\r\n\r\nexport { redrawCanvas, drawPath, openPage, savePage, pathIntersects, findNewIdx }\r\n","import React, { useCallback, useState, useEffect } from 'react'\r\n\r\nimport './Page.css'\r\n\r\nimport { redrawCanvas, drawPath, pathIntersects } from '../../utils/utils'\r\n\r\n\r\nfunction Page(props) {\r\n  const cellDPI = props.cellSize ? props.cellSize * 2 : 20\r\n\r\n  const [canvas, setCanvas] = useState(null)\r\n  const [stylus, setStylus] = useState(null)\r\n  const [painting, setPainting] = useState(false)\r\n  const [currentPath, setCurrentPath] = useState([])\r\n  const [screenshot, setScreenshot] = useState(null)\r\n  \r\n  const [isStylusShown, setIsStylusShown] = useState(false)\r\n\r\n  const {data, pageIndex, setCorner, updateStorage, setData} = props\r\n\r\n  const cRef = useCallback(c => {\r\n    if (c === null) return\r\n\r\n    setCanvas(c)\r\n\r\n    c.style.width = (28*cellDPI / 2) + 'px'\r\n    c.style.height = (41*cellDPI / 2) + 'px'\r\n    c.width = 28*cellDPI\r\n    c.height = 41*cellDPI\r\n    const ctx = c.getContext('2d')\r\n    \r\n    redrawCanvas(c, ctx, data, pageIndex)\r\n  }, [cellDPI, data, pageIndex])\r\n\r\n\r\n  useEffect(_ => {\r\n    if (canvas === null) return\r\n    const coords = {\r\n      top: canvas.offsetTop - 3,\r\n      left: canvas.offsetLeft\r\n    }\r\n    setCorner(coords)\r\n  }, [setCorner, canvas])\r\n\r\n  useEffect(_ => {\r\n    if (canvas === null) return\r\n\r\n    const ctx = canvas.getContext('2d')\r\n    \r\n    redrawCanvas(canvas, ctx, data, pageIndex)\r\n  }, [props.redraw, canvas, data, pageIndex])\r\n\r\n  const sRef = useCallback(s => setStylus(s), [])\r\n\r\n\r\n  function mouseMoveHandler(e) {\r\n    requestAnimationFrame(_ => {\r\n      if (stylus === null) return\r\n\r\n      if (painting && props.mode === 'line') {\r\n        const relX = (e.clientX - canvas.offsetLeft) / cellDPI\r\n        const relY = (e.clientY - canvas.offsetTop) / cellDPI\r\n\r\n        const ctx = canvas.getContext('2d')\r\n        ctx.putImageData(screenshot, 0, 0)\r\n        drawPath(canvas, ctx, [...currentPath, {x: relX, y: relY}], props.pageIndex)\r\n      }\r\n\r\n      if (props.mode !== 'pen') return\r\n\r\n      setIsStylusShown(true)\r\n      stylus.style.top = Math.floor(e.clientY-2) + 'px'\r\n      stylus.style.left = Math.floor(e.clientX-2) + 'px'\r\n      if (painting) {\r\n        const relX = (e.clientX - canvas.offsetLeft) / cellDPI\r\n        const relY = (e.clientY - canvas.offsetTop) / cellDPI\r\n\r\n        setCurrentPath(e => [...e, {x: relX, y: relY}])\r\n        const ctx = canvas.getContext('2d')\r\n        drawPath(canvas, ctx, currentPath, props.pageIndex)\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  function mouseDownHandler(e) {\r\n    if (props.mode === 'pen') {\r\n      if (!painting) {\r\n        setPainting(true)\r\n\r\n        const relX = (e.clientX - canvas.offsetLeft) / cellDPI\r\n        const relY = (e.clientY - canvas.offsetTop) / cellDPI\r\n\r\n        setCurrentPath([{type: 'pen', pageIndex: props.pageIndex}, {x: relX, y: relY}])\r\n        const ctx = canvas.getContext('2d')\r\n        drawPath(canvas, ctx, [{type: 'pen', pageIndex: props.pageIndex}, {x: relX, y: relY}], props.pageIndex)\r\n      }\r\n    } else if (props.mode === 'eraser') {\r\n        const relX = (e.clientX - canvas.offsetLeft) / cellDPI\r\n        const relY = (e.clientY - canvas.offsetTop) / cellDPI\r\n\r\n        let res = JSON.parse(JSON.stringify(data))\r\n        res.paths = []\r\n        data.paths.forEach((item, i) => {\r\n          if (!pathIntersects(relX, relY, item, cellDPI)) res.paths.push(item)\r\n        })\r\n        setData(res)\r\n        const ctx = canvas.getContext('2d')\r\n        redrawCanvas(canvas, ctx, res, pageIndex)\r\n        updateStorage(res)\r\n    }\r\n  }\r\n\r\n  function mouseUpHandler(e) {\r\n    if (props.mode === 'pen') {\r\n      if (painting) {\r\n        setPainting(false)\r\n\r\n        let res = data\r\n        res.paths.push(currentPath)\r\n        setData(res)\r\n        updateStorage(res)\r\n\r\n        setCurrentPath([])\r\n        const ctx = canvas.getContext('2d')\r\n        redrawCanvas(canvas, ctx, props.data, props.pageIndex)\r\n      }\r\n    } else if (props.mode === 'line') {\r\n      if (!painting) {\r\n        setPainting(true)\r\n        const ctx = canvas.getContext('2d')\r\n        setScreenshot(ctx.getImageData(0, 0, canvas.width, canvas.height))\r\n        \r\n        const relX = (e.clientX - canvas.offsetLeft) / cellDPI\r\n        const relY = (e.clientY - canvas.offsetTop) / cellDPI\r\n\r\n        setCurrentPath([{type: 'line', pageIndex: props.pageIndex}, {x: relX, y: relY}])\r\n        drawPath(canvas, ctx, [{type: 'line', pageIndex: props.pageIndex}, {x: relX, y: relY}], props.pageIndex)\r\n      } else {\r\n        setPainting(false)\r\n\r\n        const relX = (e.clientX - canvas.offsetLeft) / cellDPI\r\n        const relY = (e.clientY - canvas.offsetTop) / cellDPI\r\n\r\n        let res = data\r\n        res.paths.push([...currentPath, {x: relX, y: relY}])\r\n        setData(res)\r\n        updateStorage(res)\r\n\r\n        setCurrentPath([])\r\n        const ctx = canvas.getContext('2d')\r\n        redrawCanvas(canvas, ctx, props.data, props.pageIndex)\r\n      }\r\n    }\r\n  }\r\n\r\n  function mouseLeaveHandler(e) {\r\n    setPainting(false)\r\n    setIsStylusShown(false)\r\n\r\n    let res = data\r\n    res.paths.push(currentPath)\r\n    setData(res)\r\n    updateStorage(res)\r\n\r\n    setCurrentPath([])\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className=\"text-ink shadow-2xl\"\r\n      onMouseLeave={mouseLeaveHandler}\r\n      onMouseMove={mouseMoveHandler}\r\n      onMouseDown={mouseDownHandler}\r\n      onMouseUp={mouseUpHandler}\r\n    >\r\n      <canvas \r\n        ref={cRef}\r\n        id=\"c\"\r\n      />\r\n      <svg \r\n        viewBox=\"-8 -8 16 16\" \r\n        fill=\"currentcolor\" \r\n        style={{display: isStylusShown?'block':'none'}}\r\n        className=\"stylus\" \r\n        ref={sRef}\r\n      >\r\n        <circle x=\"8\" y=\"8\" r=\"4\"></circle>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Page\r\n","import React from 'react'\r\nimport './Sidebar.css'\r\n\r\nfunction Sidebar(props) {\r\n  if (!props.modeSetter || !props.mode) return <div>info is not provided</div>\r\n\r\n  const setShowingBook = props.setShowingBook\r\n\r\n\r\n  function homeButtonCallback() { \r\n    setShowingBook(false)\r\n  }\r\n\r\n  function penButtonCallback() {\r\n    if (props.mode === 'pen') props.modeSetter('none')\r\n    else props.modeSetter('pen')\r\n  }\r\n\r\n  function lineButtonCallback() {\r\n    if (props.mode === 'line') props.modeSetter('none')\r\n    else props.modeSetter('line')\r\n  }\r\n\r\n  function textButtonCallback() {\r\n    props.modeSetter('none')\r\n    props.setData(e => {\r\n      let res = e\r\n      res.texts.push({top: 5, left: 5, text: 'text'})\r\n      return res\r\n    })\r\n    props.setRedrawTexts(e => !e)\r\n  }\r\n\r\n  function backButtonCallback() {\r\n    if (props.undoing) props.undoing()\r\n  }\r\n\r\n  function settingsButtonCallback() {\r\n  }\r\n\r\n  function eraserButtonCallback() {\r\n    if (props.mode === 'eraser') props.modeSetter('none')\r\n    else props.modeSetter('eraser')    \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center sidebar-container text-ink\">\r\n      <button\r\n        onClick={homeButtonCallback}\r\n        className=\"sidebar-button\"\r\n      >\r\n        <svg viewBox=\"0 0 32 32\" fill=\"none\" stroke=\"currentcolor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.5\">\r\n          <path d=\"M4 8 L28 8 M4 16 L28 16 M4 24 L28 24\" />\r\n        </svg>\r\n      </button>\r\n\r\n      <button\r\n        onClick={penButtonCallback}\r\n        className={`sidebar-button p-1 ${props.mode==='pen'?'btn-selected':''}`}\r\n      >\r\n        <svg viewBox=\"0 0 32 32\" fill=\"none\" stroke=\"currentcolor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.5\">\r\n          <path d=\"M30 7 L25 2 5 22 3 29 10 27 Z M21 6 L26 11 Z M5 22 L10 27 Z\" />\r\n        </svg>\r\n      </button>\r\n\r\n      <button\r\n        onClick={lineButtonCallback}\r\n        className={`sidebar-button p-1 ${props.mode==='line'?'btn-selected':''}`}\r\n      >\r\n        <svg viewBox=\"0 0 1000 1000\" fill=\"currentcolor\">\r\n          <path d=\"M801.2 5.5l-801.2 786.2 198.8 202.5 801.2-786.2-198.79999999999995-202.5z m61 268.7l-27.5 26.900000000000034-39.90000000000009-40.700000000000045-25.5 24.900000000000034 40 40.69999999999999-37.69999999999993 36.89999999999998-61.60000000000002-62.69999999999999-25.299999999999955 24.900000000000034 61.5 62.69999999999999-27.40000000000009 27.099999999999966-40-40.89999999999998-25.299999999999955 24.899999999999977 39.799999999999955 40.900000000000034-36.89999999999998 36.19999999999999-68.10000000000002-69.19999999999999-25.5 24.899999999999977 68.10000000000002 69.19999999999999-27.399999999999977 27.100000000000023-46.39999999999998-47.30000000000001-25.5 24.900000000000034 46.5 47.299999999999955-37.700000000000045 36.89999999999998-68.09999999999997-69.29999999999995-25.30000000000001 24.899999999999977 68 69.30000000000007-27.5 26.899999999999977-46.39999999999998-47.30000000000007-25.30000000000001 24.90000000000009 46.5 47.299999999999955-35 34.299999999999955-67.90000000000003-69.39999999999998-25.5 25 68.20000000000005 69.30000000000007-27.5 26.899999999999977-46.400000000000034-47.30000000000007-25.399999999999977 24.90000000000009 46.30000000000001 47.299999999999955-37.60000000000002 36.89999999999998-68.1-69.19999999999993-25.30000000000001 24.799999999999955 68.00000000000003 69.29999999999995-27.400000000000034 27.100000000000023-46.5-47.5-25.299999999999983 24.899999999999977 46.5 47.5-34.099999999999994 33.200000000000045-129.4-132.10000000000002 730.8000000000001-717.1999999999999 129.5 132.09999999999997-42.80000000000007 41.89999999999998-61.39999999999998-62.69999999999999-25.5 24.900000000000006 61.700000000000045 62.79999999999998z\"/>\r\n        </svg>\r\n      </button>\r\n\r\n      <button\r\n        onClick={eraserButtonCallback}\r\n        className={`sidebar-button p-1 ${props.mode==='eraser'?'btn-selected':''}`}\r\n      >\r\n        <svg viewBox=\"0 0 1000 1000\" fill=\"currentcolor\">\r\n          <path d=\"M903.3 476.3c47.10000000000002-48.69999999999999 45-120.5-2.7999999999999545-168.3-53.5-53.599999999999994-107.10000000000002-107.19999999999999-160.60000000000002-160.7-50-50.000000000000014-123.69999999999993-50.10000000000001-173.69999999999993-0.10000000000002274-155.40000000000003 155.3-310.70000000000005 310.6-466.00000000000006 466.00000000000006-49.999999999999986 50-50.19999999999999 123.5-0.3999999999999915 173.79999999999995 29.39999999999999 29.799999999999955 58.8 59.700000000000045 89.10000000000001 88.5 6.400000000000006 6 17 10.399999999999977 25.69999999999999 10.600000000000023 43.70000000000002 1.1000000000000227 87.50000000000003 0.5 131.20000000000002 0.5 42.80000000000001 0 85.59999999999997-0.39999999999997726 128.39999999999998 0.2999999999999545 13.800000000000011 0.20000000000004547 23.80000000000001-3.8999999999999773 33.60000000000002-13.699999999999932 72.19999999999999-72.80000000000007 144.90000000000003-145.20000000000005 217.3-217.70000000000005 59.60000000000002-59.700000000000045 119.69999999999993-118.70000000000005 178.19999999999993-179.2z m-298.5 244.99999999999994l-57.69999999999993 57.700000000000045c-20.600000000000023 20.600000000000023-41 41.5-62.10000000000002 61.700000000000045-4.199999999999989 4-11.100000000000023 7.2999999999999545-16.80000000000001 7.399999999999977-81.39999999999998 0.5-162.8 0.39999999999997726-244.2 0-5.300000000000011 0-11.900000000000006-2.8999999999999773-15.699999999999989-6.600000000000023-28-27.299999999999955-55.80000000000001-54.700000000000045-82.9-82.79999999999995-33.400000000000006-34.700000000000045-33.30000000000001-83.10000000000002 0.6999999999999886-117.40000000000009 55.5-56 156.20000000000002-156.29999999999995 199.50000000000003-199.19999999999993 11.399999999999977-11.300000000000011 29.799999999999955-11.200000000000045 41.099999999999966 0.19999999999998863l238.09999999999997 238.09999999999997c11.300000000000068 11.300000000000068 11.300000000000068 29.600000000000023 0 40.89999999999998z m-3.699999999999932 143.10000000000002h336.4v25.600000000000023h-336.4v-25.600000000000023z\"/>\r\n        </svg>\r\n      </button>\r\n\r\n      <button\r\n        onClick={textButtonCallback}\r\n        className=\"sidebar-button p-1\"\r\n      >\r\n        <svg viewBox='0 0 512 512'><rect x='96' y='48' width='320' height='416' rx='48' ry='48' fill='none' stroke='currentColor' strokeLinejoin='round' strokeWidth='24'/><path fill='none' stroke='currentColor' strokeLinecap='round' strokeLinejoin='round' strokeWidth='24' d='M176 128h160M176 208h160M176 288h80'/></svg>\r\n      </button>\r\n\r\n      <button\r\n        onClick={backButtonCallback}\r\n        className=\"sidebar-button flip-content\"\r\n      >\r\n        <svg viewBox='0 0 512 512'><path d='M400 148l-21.12-24.57A191.43 191.43 0 00240 64C134 64 48 150 48 256s86 192 192 192a192.09 192.09 0 00181.07-128' fill='none' stroke='currentColor' strokeLinecap='round' strokeMiterlimit='10' strokeWidth='24'/><path d='M464 97.42V208a16 16 0 01-16 16H337.42c-14.26 0-21.4-17.23-11.32-27.31L436.69 86.1C446.77 76 464 83.16 464 97.42z' fill='currentColor'/></svg>\r\n      </button>\r\n\r\n      <button\r\n        onClick={settingsButtonCallback}\r\n        className=\"sidebar-button p-1\"\r\n      >\r\n        <svg viewBox=\"0 0 32 32\" fill=\"none\" stroke=\"currentcolor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"1.5\">\r\n          <path d=\"M13 2 L13 6 11 7 8 4 4 8 7 11 6 13 2 13 2 19 6 19 7 21 4 24 8 28 11 25 13 26 13 30 19 30 19 26 21 25 24 28 28 24 25 21 26 19 30 19 30 13 26 13 25 11 28 8 24 4 21 7 19 6 19 2 Z\" />\r\n          <circle cx=\"16\" cy=\"16\" r=\"4\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\n\r\nfunction TextLayer(props) {\r\n        const {\r\n          item, \r\n          i, \r\n          data, \r\n          setData, \r\n          setRedrawTexts, \r\n          setCurText, \r\n          font,\r\n          size,\r\n          corner,\r\n          updateStorage,\r\n          mode\r\n        } = props\r\n\r\n        const leftEffective = corner.left + item.left*size\r\n        const topEffective = corner.top + item.top*size\r\n        const minSize = size\r\n\r\n        function changeText(e) {\r\n          data.texts[i].text = e.target.value\r\n          setData(data)\r\n          updateStorage(data)\r\n          setRedrawTexts(e => !e)\r\n        }\r\n        function abortHandler(e) {\r\n          if (data.texts[i].text !== '') return\r\n          data.texts.splice(i, 1)\r\n          setData(data)\r\n          updateStorage(data)\r\n          setRedrawTexts(e => !e)\r\n        }\r\n\r\n        function onMouseDown(e) {\r\n          if (mode === 'eraser') {\r\n            data.texts.splice(i, 1)\r\n            setData(data)\r\n            updateStorage(data)\r\n            setRedrawTexts(e => !e)\r\n          }\r\n          if (e.clientX > leftEffective + minSize/2 || e.clientY > topEffective + minSize/2) return\r\n          setCurText(i)\r\n          setRedrawTexts(e => !e)\r\n        }\r\n\r\n        function onMouseUp(e) {\r\n          setCurText(-1)\r\n          setRedrawTexts(e => !e)\r\n        }\r\n\r\n        return <textarea \r\n          className=\"fixed resize bg-transparent text-ink\"\r\n          style={{\r\n            left: leftEffective+'px', \r\n            top: topEffective+'px', \r\n            minWidth: minSize + 'px', \r\n            minHeight: minSize + 'px',\r\n            fontFamily: font\r\n          }}\r\n          onMouseUp={onMouseUp}\r\n          onMouseDown={onMouseDown}\r\n          value={item.text}\r\n          onBlur={abortHandler}\r\n          onChange={changeText} \r\n        />\r\n}\r\n\r\nexport default TextLayer\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport Page from './components/Page/Page'\r\nimport Sidebar from './components/Sidebar/Sidebar'\r\nimport TextLayer from './components/TextLayer/TextLayer'\r\n\r\nimport { openPage, savePage } from './utils/utils'\r\n\r\n\r\nexport default Main\r\n\r\nfunction Main(props) {\r\n  const root = document.getElementById('root')\r\n  const font = props.font\r\n  const setShowingBook = props.setShowingBook\r\n\r\n  const [size, setSize] = useState(root.offsetHeight / 42)\r\n  const [redraw, setRedraw] = useState(true)\r\n  // eslint-disable-next-line\r\n  const [_, setRedrawTexts] = useState(true)\r\n  const [corner, setCorner] = useState({left: 0, top: 0})\r\n\r\n  const [mode, setMode] = useState('none')\r\n\r\n  const [data, setData] = useState({\r\n    paths: [],\r\n    texts: [\r\n      {top: 0, left: 0, text: 'Apr 2021'}\r\n    ], \r\n    templateLeft: 'blank', \r\n    templateRight: 'blank'\r\n  })\r\n  \r\n\r\n  const [curText, setCurText] = useState(-1)\r\n\r\n  useEffect(_ => { \r\n    root.onmousemove = (event) => {\r\n      if (curText === -1) return\r\n      if (curText === 0) return\r\n      data.texts[curText].top = (event.y - corner.top)/size\r\n      data.texts[curText].left = (event.x - corner.left)/size\r\n      setData(data)\r\n      updateStorage(data)\r\n      setRedrawTexts(e => !e)\r\n    }\r\n  // eslint-disable-next-line\r\n  }, [curText, root, corner, size, data])\r\n\r\n  useEffect(_ => {\r\n    setSize(root.offsetHeight / 42)\r\n  }, [root.offsetHeight])\r\n\r\n  function undoLastPath() {\r\n    let res = data\r\n    res.paths.pop()\r\n    setData(res)\r\n    updateStorage(res)\r\n    setRedraw(e => !e)\r\n  }\r\n\r\n  function updateStorage(data) {\r\n    savePage(props.page, data)\r\n  }\r\n\r\n  useEffect(_ => {\r\n    window.addEventListener('keyup', e => {\r\n      if (e.ctrlKey && e.keyCode === 90) undoLastPath()\r\n    })\r\n    window.addEventListener('keydown', e => {\r\n      if (e.ctrlKey && e.keyCode === 90) {\r\n        e.preventDefault()\r\n        return false\r\n      }\r\n    })\r\n  // eslint-disable-next-line\r\n  }, [])\r\n\r\n\r\n  useEffect(_ => {\r\n    setData(openPage(props.page))\r\n  }, [props.page])\r\n  return (\r\n    <div className=\"h-full\">\r\n      <div className=\"flex items-center justify-center flex-row text-ink bg-back h-full w-full fixed top-0 left-0\">\r\n        <div className=\"pl-0.5 bg-book-shade\">\r\n          <div className=\"p-1 bg-book-cover flex flex-row\">\r\n            <div className=\"pl-0.5 bg-paper-shaded\">\r\n              <Page \r\n                redraw={redraw} \r\n                cellSize={size} \r\n                data={data} \r\n                pageIndex={0} \r\n                setData={setData} \r\n                mode={mode} \r\n                setCorner={setCorner} \r\n                updateStorage={updateStorage} \r\n              />\r\n            </div>\r\n\r\n            <div className=\"w-0.5\" />\r\n\r\n            <Page \r\n              redraw={redraw} \r\n              cellSize={size} \r\n              data={data} \r\n              pageIndex={1} \r\n              setData={setData} \r\n              mode={mode} \r\n              setCorner={e => e} \r\n              updateStorage={updateStorage} \r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex flex-row fixed top-0 left-0 items-center h-full\">\r\n        <Sidebar \r\n          mode={mode} \r\n          modeSetter={setMode} \r\n          setRedrawTexts={setRedrawTexts} \r\n          undoing={undoLastPath}\r\n          setData={setData}\r\n          setShowingBook={setShowingBook}\r\n        />\r\n      </div>\r\n      \r\n      {data.texts.map((item, i) => \r\n        <TextLayer \r\n          font={font}\r\n          item={item} \r\n          size={size}\r\n          key={i} \r\n          i={i} \r\n          data={data} \r\n          setData={setData} \r\n          updateStorage={updateStorage}\r\n          setRedrawTexts={setRedrawTexts} \r\n          setCurText={setCurText}\r\n          corner={corner}\r\n          mode={mode}\r\n        /> \r\n      )}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react'\nimport './fancyScrollBars.css'\n\nimport {findNewIdx} from './utils/utils'\n\nfunction SelectorPage(props) {\n  const { setPageIndex, setShowingBook, font } = props\n\n  const [pages, setPages] = useState([])\n  const [redraw, setRedraw] = useState(true)\n\n  useEffect(() => {\n    const tmpPages = JSON.parse(localStorage.getItem('index'))\n    if (tmpPages) {\n      tmpPages.push({title: 'new page', index: findNewIdx(tmpPages)})\n      setPages(tmpPages)\n    } else {\n      let tmp = []\n      tmp.push({title: 'new page', index: findNewIdx(tmp)})\n      setPages(tmp)\n    }\n  }, [])\n\n  return (\n    <div style={{fontFamily: font}} className=\"h-screen w-screen bg-back flex items-center text-ink\">\n      <div/>\n      <div className=\"ml-12 mw flex flex-col h-1/2 bg-paper p-4 rounded shadow\">\n        <div className=\"p-1 bg-paper-shaded\">\n          Pages:\n        </div>\n        <div \n          className=\"flex flex-col justify-start h-full pt-0.5 px-1 overflow-auto border border-paper-shaded rounded-sm mt-0.5 fancy-scrollbar\"\n        >\n          {pages.map((item, i) => \n            <button \n              key={i} \n              className=\"cursor-pointer rounded bg-paper-shaded p-1 mb-0.5 hover:text-ink-highlighted transition flex justify-between items-center\"\n              onClick={e=>{\n                if (i === pages.length - 1) {\n                  let obj = pages\n                  obj.pop()\n                  obj.push({title: 'new page', index: findNewIdx(obj)})\n                  localStorage.setItem('index', JSON.stringify(obj))\n                }\n                setPageIndex(item.index)\n                setShowingBook(true)\n              }}\n            >\n              <div className=\"flex items-center\">\n                <span> - </span>\n                <input \n                  value={item.title} \n                  name={i}\n                  className=\"bg-transparent\"\n                  style={{width: 8*(item.title.length + 1) + 'px'}}\n                  onChange={e=>{\n                    const name = e.target.name\n                    let obj = pages\n                    obj[name].title = e.target.value\n                    setPages(obj)\n                    let cpy = JSON.parse(JSON.stringify(obj))\n                    cpy.pop()\n                    setRedraw(e => !e)\n                    localStorage.setItem('index', JSON.stringify(cpy))\n                  }}\n                  readOnly={i===pages.length-1}\n                  onClick={e=>{\n                    e.stopPropagation()\n                  }}\n                />\n              </div>\n\n              {i !== pages.length-1 ? \n              <span\n                onClick={e=>{\n                  e.stopPropagation()\n                  if (i === pages.length - 1) return\n                  let obj = pages\n                  obj.splice(i, 1)\n                  setPages(obj)\n                  let cpy = JSON.parse(JSON.stringify(obj))\n                  cpy.pop()\n                  localStorage.setItem('index', JSON.stringify(cpy))\n                  setRedraw(e => !e)\n                }}\n              >\n                <svg viewBox=\"0 0 32 32\" width=\"1rem\" fill=\"none\" stroke=\"currentcolor\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\">\n                  <path d=\"M28 6 L6 6 8 30 24 30 26 6 4 6 M16 12 L16 24 M21 12 L20 24 M11 12 L12 24 M12 6 L13 2 19 2 20 6\" />\n                </svg>\n              </span>:\n              ''}\n            </button>)}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SelectorPage\n","import React, { useState } from 'react'\n\nimport Main from './Main'\nimport SelectorPage from './SelectorPage'\n\n\nexport default App\n\nfunction App() {\n  const [pageIndex, setPageIndex] = useState(0)\n  const [showingBook, setShowingBook] = useState(false)\n  const fonts = [ \n    \"Comic Sans MS\",\n    \"'Courgette', cursive\",\n    \"'Pacifico', cursive\",\n    \"'Yellowtail', cursive\"\n  ]\n  const font = fonts[0]\n \n  if (!showingBook) return <SelectorPage setPageIndex={setPageIndex} setShowingBook={setShowingBook} font={font} />\n\n  return <Main page={pageIndex} setPageIndex={setPageIndex} setShowingBook={setShowingBook} font={font} />\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}